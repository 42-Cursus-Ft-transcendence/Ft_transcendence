input {
  beats {
    port            => 5044
    ssl             => true                         # enable SSL/TLS
    ssl_certificate => "/usr/share/logstash/certs/logstash.crt"  # server certificate for TLS
    ssl_key         => "/usr/share/logstash/certs/logstash.key"  # private key for TLS
  }
  # add file input here if needed, for example:
  # file {
  #   path            => "/var/log/fastify/*.log"
  #   start_position  => "beginning"
  # }
}

filter {
  # parse JSON messages from the "message" field
  json {
    source       => "message"
    target       => "parsed_json"
    remove_field => ["message"]
  }

  # use grok to extract timestamp, log level, and message text
  grok {
    match => { "[parsed_json][log]" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:level} %{GREEDYDATA:msg}" }
    break_on_match => false
  }

  # convert the timestamp field into @timestamp
  date {
    match  => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }

  # add metadata fields such as environment and service name
  mutate {
    add_field => {
      "environment" => "development"
      "service"     => "ft_transcende"
    }
  }

  # parse User-Agent strings
  useragent {
    source => "agent"
    target => "user_agent"
  }

  # generate a fingerprint for deduplication or routing
  fingerprint {
    source => ["host", "[parsed_json][log]"]
    target => "[@metadata][fingerprint]"
    method => "SHA1"
  }
}

output {
  stdout { codec => rubydebug }  # print events to stdout for debugging

  elasticsearch {
    hosts                     => ["https://elasticsearch:9200"]
    index                     => "ft_transcende-logs-%{+YYYY.MM.dd}"
    data_stream               => false 
    timeout                   => 90

    api_key                   => "${LOGSTASH_API_KEY}"  # authenticate via API key
    ssl_enabled               => true
    ssl_certificate_authorities => "/usr/share/logstash/ca/ca.crt"  # CA for Elasticsearch TLS
    ssl_verification_mode     => "full"
    # ssl_certificate_verification => false  # for debugging only; not recommended

    retry_initial_interval    => 5    # initial retry delay in seconds
    retry_max_interval        => 60   # maximum retry delay in seconds
    resurrect_delay           => 15000
    pool_max                  => 1000 # maximum connections in pool
    pool_max_per_route        => 100  # max connections per host

    manage_template           => true
    template_name             => "ecs-logstash"
    template_overwrite        => true
  }
}
